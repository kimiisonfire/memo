200205_cookie


1. 보안과 관련해서 cookie/session 구분

어떤 특정 상황이 있을때 클라이언트에 의해서 또는 서버에 의해서 상태 유지를 할건지
근데 어디서 하는지는 중요하지않고
유지하려고하는 어떤 특정 상태 =status 를 두개로 구분해야함
1) 보안이 유지되어야하는 경우
2) 보안이 필요없는경우

클라이언트에서 하는 대부분의 칭구들은 보안성이 갱장히 떨어짐
클라이언트쪽의 보안은 신뢰할수없음
서버측에서 보안성을 유지하려고하쥬

로그인하는 사용자의 정보를 서버에 남기려고 하는거 + 보안성

~~~~~~~~~~~상태유지를위해서~~~~~~~~~~~~
그래서 클라이언트쪽에서 쓰는게 cookie
서버쪽에서 쓰는게 session
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

"유출이되어도 상관이없냐" 그걸로 cookie/session을 결정하는거임
최근본상품 = 누가봐도 상관없음 -> cookie
최근에 본 글 역시도 마찬가지겠쥬



2. 클라이언트 관련한 cookie / session

클라이언트를 구분해야하는 경우에는 cookie
인스턴스를 구분해야할 경우에는 session

인스턴스는 그냥 java개념의 instance가 아니고요
여기에서는 유저의 개념. 유저를 구분해야한다? session
지금 application을 이용중인 유저를 하나하나 구분해야해 = session

근데 클라이언트를 구분한다 ? = device  = 장치
서버에 접근한 클라이언트의 장치를 구분해야한다 = cookie


A의 컴퓨터읹, B의 컴퓨터인지를 서버가 구분해야하잖아
그래야 거기에 맞는 response를 보낼수있으니까
그래서 최초로 어떤 브라우저에 접근하면 바로 tomcat이 cookie를 날린대
그걸로 구분한다는데용 그게 있으면 다시 날리지않는대
브라우저를 끄면 (브라우저는 창이 새로 열릴때마다 고유넘버를 갖는대)
브라우저 번호랑 서버가 가지고있는 번호가 같지않으면 다시 쿠키를 발행하는겨


프로젝트하다가 instance 즉 계정과상관없이 device를 구분해야할일이있으면
cookie를 날려줘야합니다... 잘모르겠네용

cookie는 서버에서 만들어서 브라우저한테 붙여버리는거임

cookie를 확인하려면 서버가 브라우저에게 getCookie 해서 요청해야함
그럼 브라우저는 발행되었던 쿠키를 다 준대
그럼 그거가지고 비교하는거라고허네용,,


무튼 함해볼거임

서버가 쿠키를 response에 담아서 내보내면
브라우저가 쿠키를 가져가? 뭐 저장하는건가?? 하여튼 그럴거라네요
그래서 그걸 request에서 getCookies해서 가져올수도있고 거런거임

근데 쿠키에 넣을수있는 값은 한정되어있음 == ascii 코드값만 된다 
===== 영문자, 숫자, 특수문자
한글을 넣고싶을땐 encoder/decoder 해줘야한다네요.. 흑흑.. 



팝업창띄울건데 오늘하루 열지않기 할거임
쿠키를 하나 만들건데 (확인하는 쿠키)
이게 없으면 팝업이 무조건 열리게할거임 쿠키가 있으면 팝업 안열리게할거고요
cookie의 setMaxAge를 하루로 줘서 날릴거임


cookie는 브라우저 종료하면 만료되는앤데
우리가 setMaxAge 이거 주잖아? 이거는 cookie를 permenent하게 바꿔주는애임
그래서 브라우저를 닫고 다시 열어도 setMaxAge했던 이벤트가 쭉 적용됨

그럼 하루동안 보지않기 하고싶으면 setMaxAge 이거 걸어놓으면 뭐
껐다켜도 계속 되겠네요













