200113_jsp


커맨드패턴하면서 썼단 사이트메쉬는 필터로 이루어진거거든?
근데 Spring mvc할때 쓸 타일즈는 필터가 아닙니다. 그래서 제한적으로 쓸수있게될거임
타일즈는 resolver로 구현하게될거거든,,
어렵다면 사이트메쉬써라 그치만 회사갔는데 타일즈쓴다 하면 쓸줄은 알아야하니께


js를 왜 footer에 두나요?
뭐 위에 둬도 괜찮다고 합니다 근데 그렇게하면 화면에서 렉이걸린대
그래서 일단 보여주는거에 필요한 css, ㅁㅏ크업들을 먼저 로딩하고
동작에 관련된 친구들은 나중에 로딩해도 괜찮겠다 해서 아래로 내린거임~


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

이제 진짜 스프링간다 따흑흑,,,

스프링을 웨 쓰냐? -> 스프링 mvc떄문이라고하면 안됩니다 선생님


자바는 객체지향이라고는 하지만 실상 객체를 만들어서 조립하거나 할때
클래스만 따로 구분되어있지 조립자체가 너무 어렵더라고요
왜 우리 InitBeanListener 할때 파라미터를 하나씩 읽고 인스턴스를 하나씩 만들어서 주입
이거 너무 어렵고 수고롭습니다.. 이게 진짜 객체지향일까요..?
이게 좀 쉬워져야되는거아닌가? 해서 발탁된게 스프링 1.x 였습니다

~~~ 스프링의 history ~~~

>> 스프링 1.X << 버전에서 의존 주입 (결합도를 낮추고 응집도를 높이는) 
결합과 조립을 수월하게 해주려고 나왔습니다
인스턴스를 생성하는게 아니라 받아서 쓰게끔 코딩이 되어있어야하는게 스프링의 전제임
new 해서 객체 만들어쓰는거 의미가없고요
set메서드로 객체를 반환하거나 조립하는 메서드가 꼭 있어줘야합니다

근데 이것도 xml로 조립하고 해주는것이 참 번거로웠다 이말입니다...
그래서 >>> 스프링 2.x <<< 버전에서 의존주입을 annotation으로 할수있는걸 설계하고
스프링 mvc 모듈이 나오게 되었습니다...!
기존의 service-dao 연결은 문제가 없었는데
컨트롤렁 - service를 연결하는데 그걸 하나하나 xml로 주입하기가 번거로워졌다이거임
그래서 2버전대에서부터 정확히 2.5버전부터 Web 단이 만들어지게되었고
Web 과 bean을 연결시키는 @Autowired 어노테이션을 만들게되었음
bean을 유동적으로 가져와서 쓸수있는것이라구
2.5가 Autowired, Spring mvc 나오고 대부분의 Spring Annotation이 만들어진 때입니듀

>> 스프링 3.X << 으로 오면서 뭔가 대폭 개선되었습니드
"jdk 7" 버전으로 바뀌면서 전반적으로 관점지향적인 그런것이 되었다..
관점지향(AOP), Aspect 이런것들이 중점적이라고허네요
bean에 트랜잭션을 연계하려고 했더니 아니 중복코드가 너무 많은거야
그래서 얘네를 연결하기위한 AOP, ASPECTS 가 만들어진 시기입니다
+ MVC 개편

* Spring 4.x는 jdk 8이 타겟입니다 알아두십쇼


=== 그래서 우리는 가장 기본이 되는 Spring 1.x 로 시작해서 -> 2.x -> 3.x로 갈거임
AOP라는 관점은 나중에생긴거라는거 알고계쇼


~~~ Spring issues ~~~












