191017_highjava

jdbc === Java에서 db에 연결해서 사용하는 라이브러리
오라클을 쓰고있으니까
자바에서 오라클에 접속할수있는 jdbc 라이브러리가 필요해
뭐 mysql을 쓴다? 그럼 걔 전용 라이브러리가 따로있다구

JDBC : Java DataBase Connectivity

컴터에는 다음 위치에 저장되어있음
D:\B_Util\4.Oracle\app\oracle\product\11.2.0\server\jdbc\lib
D:\C_Lib\ibatis		/ ojdbc6.jar

새로만든 jdbcTest 프로젝트에다가 ojdbc6.jar 파일을 등록!


오라클에있는 lprod를 읽어서 java에 출력하는걸 함 해볼게여
오라클에서 
select * from lprod; 하듯이 자바에서 이걸 해서 오라클한테 보내는거임 결과를 받아보고

1. 드라이버 로딩 => jdbc 라이브러리를 메모리에 로딩한다
		Class.forName("oracle.jdbc.driver.OracleDriver");
	---->>> 이 명령어는 외우셈
	---- :: 오라클에 명령어를 보내주고 결과를 받아주고 할 드라이버임
	---- :: 로딩한다 : 사용할수있게 메모리상에 기억시켜둔다 그런뜻임

2. DB에 접속하기 => DB에 접속이 성공하면 Connection 객체가 생성됨
		DriverManager.getConnection();
	
3. 처리할 SQL 명령을 DB에 전달할 객체를 생성한 후 SQL 명령을 DB에 전달
		(Statement 객체 또는 PreparedStatement 객체를 이용하여 처리)
		(Statement 객체와 PreparedStatement 객체는 Connection 객체를
		 이용하여 생성할 수 있다.)
	
4. SQL문의 처리 결과를 받아서 프로그램 용도에 맞게 사용한다.
	  1) SQL문이 'SELECT문'일 경우 ==> ResultSet 객체가 만들어진다.
	       (ResultSet 객체에는 SELECT한 결과가 저장된다.)
	  2) SQL문이 'SELECT문'이 아닐 경우(UPDATE, DELETE, INSERT 등) 
	  	   ==> 정수값이 반환된다. (정수값은 보통 처리한 레코드 수 의미)
	
5. 자원을 반납한다.

jdbc 이용할떄는 기본적으로 SQLException


1) 드라이버로딩은 try-catch로 엮어줌
2) db접속을위한 커넥션 객체 만들어줌미다으

String url = "jdbc:oracle:thin:@DB주소:포트번호:SID값"
	==> db주소는 내꺼일덴 localhost, 다른사람거일땐 아이피주소
	==> sid값 = express version  우리는 xe

String url = "jdbc:oracle:thin:@localhost:1521:xe";
String user = "SEM";
String pass = "java";
conn = DriverManager.getConnection(url, user, pass);

  ==> 얘도 try-catch에서 catch 추가해줘야되는데 ClassNotFoundException 이거임

3) SQL문 작성  --> 실행할 쿼리문 작성. 세미콜론 뺴고 쓰십쇼
String sql = "SELECT * FROM LPROD";	

4) statement 객체 생성
stmt = conn.createStatement();

5) SQL문을 DB에 전달해서 실행한 결과를 받아옴
rs = stmt.executeQuery(sql);

6. ResultSet 객에체 저장된 데이터를 반복문을 이용하여 꺼내와 처리한다. (출력만 해볼게)
   rs.next() 이용함 얘는 iterator같은친구임 
   포인터를 맨윗칸에두고 rs.next() 하면 다음칸으로 자리를 옮겨서 있나없나 판단







