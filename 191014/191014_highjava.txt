191014_highjava

vector / list 차이가 뭐죠?
collection 체계화 이전에 아주 초창기부터 지원하던게 vector라구
hashtable도 map하고 비슷한건데 map 이전에 쓰던 그런거라구..

저런 vector, hashtable 이런애들은 안에 이미 동기화처리가 되어있어서
static 변수에 write하는 쓰레드를 여러개돌리면 그게 다 적용됨 = 동기화됨
근데 그게 아닌 collection에는 동기화처리 안돼있어서
따로 동기화해줘야돼...!
클래스 객체의 선언 및 초기화에서 동기화해줄수있음!!!


wait(), notify(), notifyAll()  :: 얘네는 그냥 쓰레드에서만 쓸수있는게 아니고
Object에 있는거라 모든 객체에 쓸수있는거임. 근데 >>>동기화블럭<<<에서만 쓸수있어

하나의 쓰레드가 wait()을 만나면 waiting pool로 들어감
다른 쓰레드가 메서드 실행하다가 notify() 만나면 웨이팅풀에 하나를 깨우는 신호를 보냄
그러면 깨어난 쓰레드의 wait() 다음부분부터 실행함

웨이팅풀은 Set 으로 들어있음 순서가없다이거여
waiting pool에 쓰레드가 여러개 들어있을경우, notify()가 뭘깨울지는 복불복임 랜덤이여
notifyAll() 해서 메서드가 실행되는 순서 역시 복불복임...!
다깨웠다고해서 실제로 실행되는건 그중에 하나인거지뭐..  하나 실행중이면 또 lock걸리니까

그니까 헷갈리자나 그래서 대체적으로 두개의 쓰레드만 가지고 함
데이터 공급하는 쓰레드 + 데이터를 사용하는 쓰레드  이런식으로 역할을 분담하는 용도




~~~~ 입출력 ~~~~

File : 파일과 디렉토리를 다루는데 사용되는 클래스










