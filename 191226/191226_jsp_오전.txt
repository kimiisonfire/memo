191226_jsp_오전


오늘부터는 페이징하던거에 crud 할거임
필요한 jar는 이미 다 빌드 되어있고용

board 테이블을 member테이블에서 받아와서 작성자로 쓰도록하려고요=fk
board 오른쪽키 편집 -> 외래키 -> 테이블, 제약조건, 로컬열 바꾸고 삭제시 cascade
(cascade는 member테이블에서 삭제 시 board테이블에서도 삭제


이번프로젝트에서는 커맨드 패턴을 동시에 진행한다고하네요
해당 컨트롤ㄹ러를 제작할때 알려줄거라고함


~~~~~~~~~이거 좀 개념잡기위해 중요한얘기인거같음~~~~~~~~~
무튼! db 만들고나면 뭘가장먼저해야하지? dto 만들어야됨
근데 이거 잘만들어야 쿼리문 만들때 다시 엎어버리는일 없이 만들수있다구
관계db의 가장 큰 특징 = 정규화해야합니다
하나의 컬럼이 여러개의 데이터를 가질수없거든..
java는 하나의 변수값에 집합체를 할당할수가 있잖여. 하나의 변수로 여러개를 지칭가능
근데 db는 그게 안된단말여! 셀 한칸에 다중값을 취할수가 없다구

잠시 db 얘기중~,~
오브젝트 : 정의할수있는 모든 개념
엔터티 :  정의할수있는 모든 개념 + 관계까지..!

무튼 java에서는 집합체 변수로 줄수있는것을 관계db모델에서 테이블로 새로 빼잖아
그래서!!! 관계db모델에서는 2개의 테이블로 나눠진거를 dto에서는 하나의 vo로 쓸수도있다는거임!!!!!
예를들어 파일첨부하는 pdsVO가있다고하면
String title; String writer; String content; List<String> file;
===> 파일 변수는 집합체
관계db모델
pds 테이블 = title varchar2, content varchar2, writer varchar2, pno(pk) number
attach 테이블 = pno(fk), filename varchar2
->>>> 이렇게 두개로 나뉜 테이블을 하나의 vo로 구현할수있고
	초기 설계단계에서 여기까지 고민해야된다는거임...!!!
	
VO 만들때 무작정 db를 보면서 만들지말고
글작성 : 제목, 내용, 작성자, 첨부파일 ==> 개념설계를 보고 만들어라
그리고 테이블과 vo는 DAO를 통해서 이어줘라
	-> 근데 이러면 잦은 중첩 쿼리가 생겨 막 select 안에 select 성능떨어짐
	->> 이걸없애는 작업을 하려다보니 view, 프로시져, pl 만들게되기도해
	      근데 이건 좀 어려우니까 dao를 따로따로 만드는거야
	      select를 각 메서드에서 따로따로 하는거지..
	      근데 dao에서도, view/프로시저/pl에서도 해결안되는건
       service에서 해버리는거야. 데이터를 가공처리하는걸 서비스가 하는거지
       화면에 필요한 object 형태로 만들어버리는거지 !!!
== 각각의 데이터를 가져와주는건 dao, 그걸 dto에 맞는 자료로 심어주는거 service
     그래서 서비스에서는 트랜잭션이 걸리는거임

** 하여튼 vo랑 테이블을 1:1매칭시키지마라 vo는 화면과 일치시키는것일뿐이여
화면상에서 필요한 데이터가 뭔지를 기준으로 만들어야됨
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

사용자가 보낸 데이터를 = request에서 추출해서 vo로 만들거니까 
사용자한테 받을거는 별로 신경쓰지않아도돼
그런데 적어도 사용자에게 보낼 화면! 은 충분히 고려해서 VO를 만들어야하는거야

클라이언트가 데이터를 던지면 그거가 리퀘스트로 넘어오잖아
그걸 Application에서 리퀘스트를 VO로 바꿔
그리고 그 vo가 db에 들어가고, db에서 나온 데이터도 vo로 바꿔서 전송하고
그래서 db 바로앞에있는 DAO는 VO만 들어왔다 나갔다 하는거야
리퀘스트를 vo로 바꾸는건 대부분 Service에서 하는거고 가끔 컨트롤러에서하고




자 이제 다시 처음부터 만들고있습니듀 sqlConfig부터!

member-mapper를 짜는데 좀 특이하네용
일단 글을 검색하는 sql문을 먼저 짜고있는데
<sql id="search"> 로 시작하는 sql의 if문이 있어..! (내용은 전부 and id like ~~ 이런식)
이거를 검색하는 select문에 include했어
그리고 sql문이 and를 넣어주는거니까 아무의미없는 where절을 하나 넣어줌
왜냐면 where <include refid="search"> 했을때 아무것도 안고르고 누르면
where    << 이렇게 쿼리문이 끝나는거잖아 그래서
무의미한 where 절을 하나 넣어놓고 그 다음을 and로 주는것입니듀


- 잠시 인터페이스를 쓰는 이유
뼈대를 만들고 아키텍쳐 구현하려고
아직 정확히 어떤 기능을 구현할지 몰라서
규격ㄱ을 미리 정해놓으려고
등등










