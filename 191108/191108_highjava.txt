191108_highjava

Fxml 파일을 로드하고 그거에 대한 scene을 구려주려고할떄
로드하면서 바로 그다음의 컨트롤러파일의 initialize() 메서드가 실행함
그래서 initialize 메서드에 뭘 넣을수가없음
이럴땐 따로 메서드 만들어줘야함


네트워킹~~~~~~~~~~~~~~~~~~~~~~~~~~

서버 :: 서비스를 제공하는 쪽
클라이언트 :: 서비스를 제공받는 쪽

서버기반 모델 : 서버가 하나있고 거기에 사람들이 접속해서 쓰는거
	보안이 좋지만 서버가 털리면 다털림
p2p 모델 : 서버와 클라이언트 구분 없음. 각 컴퓨터가 서버역할하는겨
	서버 구축 할필요가없어서 구축비용 없음. 

ip 주소
아직은 4바이트짜리 주소를 쓰고있음 (조만간 6바이트로 바뀔거라네용)
cmd -> ipconfig로 각ㅈ 컴터의 아이피주소를 알수있져
192.168. ~~  = local 주소. 외부에서 접근할수없는주소임
	ip는 어떤 컴퓨터를 찾아가는 유일한 방법 ! 이라고 생각하면됨다

ip 주소를 우리가 다루려면 ip 주소를 다루기 위한 클래스가 필요하겠지?
InetAddress 라는게 있대 (근데 금방 넘어감)
URL 클래스도 있음.  URLConnection도 있음!
---> 이렇게 세개를 이용해서 어떻게 사용하는지 알아볼게영

javaNetwork 프로젝트 만들었음다


URL url = new URL("http", "ddit.or.kr", 80, "index.html?test=123");
 - http : 프로토콜
 - ddit.or.kr  : 도메인 주소. 원래 숫자인데 외우기쉬운 문자 그런거여
 - 80 : 포트번호
 - index.html : 이 문서에 접근하겠다
 - ?~~ : 파라미터값

포트번호 :: 나중에 네트워크 짜게되면 포트번호를 지정해줄거임
	지정된 범위 바깥의 번호를 사용해야하는데
	보통 1024까지는 지정이 되어있음
	


하여튼 이렇게저렇게 읽고 어쩌고하는걸 했음
근데 우리가하려는건 네트워크 어쩌고를 통해서 막 챗봇같은거 만드는거임
내가 원하는 데이터를 상대편에게 보내고 받고 하는 프로그램
==== 소켓 프로그램!!!


>>>>>> 소켓 프로그램 <<<<<<<

소켓 : 프로세스간의 통신에 사용되는 양쪽 끝단
 	TCP : 연결 기반. 일단 연결이 됐나안됐나 검사하고 연결이 되면 
	데이터를 주고받음 LIKE 전화통화
	UDP : 상대편에게 일단 무조건 데이터를 보내고보는거임 LIKE 택배


 * TCP 소켓 프로그래밍
소켓 : ㅌ통신 담당
서버소켓 : 통신할수있는 준비상태를 만들어놓고 요청이 들어오는지 감시
	요청들어온 상대편과 서버를 연결시켜줌
서버와 클라이언트가 분리되어있져


하여튼 오늘하면서 서버랑 클라이언트에서 각각 뭘 하는걸 만들었어
이걸 콘솔로는 동시에볼수없으니까
해당 workspace/bin 까지 가서 주소창에서 cmd 띄움
거기서 java basic.tcp.TCPServer01
한쪽은 java basic.tcp.TCPClient01

이렇게하면 서버와 클라이언트가 호로록 같이 뭔가 되는걸 볼수있음
















