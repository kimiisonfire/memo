200122_spring_오전


어제는 댓글 목록을 url로 요청해서? yarc같은거나 url로 요청해서 결과보는건했고
오늘은 댓글 그거 단위테스트 한번 해볼게용
REST방식의 json 데이터를 테스트할때는 andExpect의 방식이 약간 다르다고허네요,,

말했듯이 컨트롤러는 브라우저를 통해서 요청을 받지만
테스트는 MockMvc를 통해 요청을 받는다 잊지마쇼
화면을 넘기는 방식이 아니기때문에 테스트 진행방식이 다를거라는것도 인지하쇼


우리가 replycontroller는 restful방식이고 context에 등록된 서비스를 쓰고있다
그래서 우리가 reply를 임의로 만들고 그것을 쓸것입니다,,
지금 reply는 dao-db에서 가져오고있잖여
우리는 직접 데이터를 만들고 그걸 dao-service-cont 까지 가져와야한다구

>> 컨트롤러를 테스트해봐라
= dao랑은 상관없게 해야될거아니겠어? 그래서 바로 데이터를 넘겨주는 service를 만들어야되는거야. MockReplService말이쥬..
그래서 거기서 우리가 지금 리스트받아오는걸 하고있으니까
리스트넘기는 메서드에다가 map 데이터를 알아서 넘기도록 하면 되겠쥬?
만들때는 같은 패키지에 만들면되고요.

서비스를 만들었으면 그걸 MockMvcBuild 하기 전에 세팅해야겠지?
무튼 세팅도 합니다.. 기존 컨트롤러를 불러와서 거기에 setService!


아니 시바 햄크레스트 미친놈때문에 걍 안쓰려고했는데
matcher를 도저히 안쓸수가없어서 jar를 걍 강제로 넣어줄게
matches maven -> hamcrest all -> 1.3 jar
복사해서 web-inf lib폴더만들고 넣어줬다 add build path도 해줬고요
그러고나서 hamcrest의 matchers를 static import 해줬음
jsonPath라는것도 필요해서 json path maven -> 0.8.1 -> jar 강제추가! (bundle로돼있어
json smart도 필요해! 걔도 강제추가할게


mockMvc.perform(get("/replies/700/1"))
	   .andDo(print())
	   .andExpect(status().isOk())
	   .andExpect(jsonPath("$.replyList", hasSize(2)))
	   .andExpect(jsonPath("$.replyList[0].rno", is(1)))
	   .andExpect(jsonPath("$.pageMaker.cri.page", is(1)));
-->
아까 restful은 test하는게 다르다그랬잖여
일단 status는 뭐 똑같고요
나온 결과가 json이기때문에 json의 path를 따라가면서 확인하는겨 = >>jsonPath<<
jsonPath를 얘기할때는 시작이 $ 래!!! 
{ "replyList" : [ { "rno" : 42, "bno" : 1}, {"rno":43, "bno":1} ]
$.replyList[1].rno                           --------- > 얘찾아가는법
그냥 저 replyListㄴ를 찾을거면 $.replyList  이렇게하는거여

replyList의 배열 첫번째에서 rno를 찾고싶으면???
 =  .andExpect(jsonPath("$.replyList[0].rno", is(1)))

pageMaker에 들어있는 page 찾고싶으면 ??? 
 = .andExpect(jsonPath("$.pageMaker.cri.page", is(1)))


~~~~~~~이렇게하면 일반 컨트롤러던 rest 컨트롤러던 다 테스트할수있게된거임 (?)


댓글 목록이 보이게 했습니당 
댓글목록을 보이게하는 컨트롤러는 했고 그 주소에 맞게 reply_js.jsp도 수정했스


댓글 등록쪽 하고있음
form에다가 쓰면 그걸 json stringify해서 보낼테니까
그걸 받는 컨트롤러쪽에서 @RequestBody 해서 replyVO를 뽑아내
그걸 service에 인가해서 뭐 등록하고 그런거
응답담을 entity도 만들어주고 return하고 하면 되지뭐..

이거 jsp쪽에서 add버튼 이벤트줄때
contentType을 이미 application/json으로 줬기때문에
받는쪽에서 jackson 데이터바인드.. 예 뭐 그런거라네요...

댓글 등록할때 페이지 버그나던거때문에 realEndPage 넣어줬습니다 이건 jsp에서도했어



댓글 수정 하고있다
method가 put, patch 이렇게 있다네요
둘은 결과적으로 post랑 같다고하네요 그냥 메서드로만 구분되는것일뿐,,
무튼 컨트롤러를 put으로 바꿨으니까 jsp에서도 put으로 와야겟쥬?
headers:{
  "Content-Type" : "application/json",
  "X-HTTP-Method-Override" : "PUT"
}
이거 추가해줬습니다,,
안해줘도 괜찮을수도있는데 put이라는걸 지원안해줄수도있대.. 그래서 확실히한것임


댓글삭제도 했습니다.. 
method의 타입을 delete로 했음
안될수도있으니까 얘도 header를 넣어줘볼게용


글 수정하고있는데요
수정완료되면 새창띄우는게 아니니까,,  메서드는 void로 하ㅣ고있습니당





