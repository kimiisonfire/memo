191220_jsp



~~~ 필터 328p~~~

리퀘스트가 올때마다 서블릿마다 해야하는 공통된 작업이 있다면
 예) 그룹웨어 : 들어오는 리퀘스트마다 로그인유무확인, 인코딩 utf-8 적용, null 체크 등
이걸 매번 하는게 너무너무 귀찮지않겠어?
그래서 서블릿으로 들어오기전에 저런 작업들을 미리 하고 서블릿으로 들어오면 좋잖여
= 필터

그런데 필터들은 서로간의 질서가 있어
공기청정기도 필터가 구멍이 큰거-중간거-촘촘한거 순서로해야 의미가있듯이
로그인유무 - 인코딩 - null 체크도 순서를 줘본다면
  >>> 1. 인코딩(무조건 수행해야하는것) 
        2. 로그인유무(이 기능에서 수행해야하는거) 
        3. null 체크(특수한 경우에 수행)

필터가 리퀘스트를 받아서 수행하면 이런저런 처리후에 그 리퀘스트를 
다음의 필터 또는 서블릿으로 넘겨야하거든
그 넘겨주는 역할을 하는게  >>>   chain()    <<< 메서드


근데 필터는 HttpServletRequest 가 아닙니다..,
필터에 올때는 ServletRequest로 오는거야.
그래서 doGet, doPost 메서드도 없고 그래서 필터는 메서드 방식을 get/post 구분X


필터는 Filter 인터페이스를 구현하고있기때문에
구현을 안한다고 하더라도 destroy(), doFilter(~~~), init() 모두 훅메서드로라도 둬야함
doFilter()는 get/post를 구분하지 않고, request가 오기만하면 실행됨!

init(FilterConfig fConfig) 메서드의 매개변수인 fConfig는 
web.xml initparam으로 초기화될수있다는거임!!

리퀘스트가 올때마다 무조건 돌아가게 하고싶다면
webFilter(어노테이션) 여기에 "/*" 이걸주면됨
하지만 어노테이션에 줄경우 소스코드를 열어봐야만 경로가 어디인지 확인할수있음
+ 필터가 끝나고 어디로갈지를 알수없음

====> 그치만 이렇게하는건 좀 별로고
	web.xml에다가 등록해주겠음!

이떄 설정해줬던 필터의 url을 서블릿의 어노테이션에 그대로 써줘야
필터 다음으로 바로 서블릿으로 넘어가진다


이 필터를 특정 url로 잡지않고 모오오든 서블릿에서 필터가 적용되게 하고싶으면
web.xml에서 url-pattern 을 /* 이걸로 주면됨!!!


로그인 체크하는 필터를 만들기위해 잠시 세션이야기 해볼게용
로그인 상태를 유지하기위해 세션을 씁니다
로그인했을때 만들어서 로그아웃하면 날려야쥬
이걸 웹에서는 갱신<< 하는 방식으로해!
처음에 was가 세션을 만들어줘. 세션이 있으면 있는걸 쓰고, 없을때 create
세션을 날려서 없애버리면 톰캣이 자동으로 새로운 세션을 다시 만들어

===> 우리가 세션을 다시 만들필요 없고. 세션을 잘 날리기만하면된다


테스트하기위해 LoginServlet으로 왔음
세션은 톰캣이 jsp->서블릿으로 바꿀때 만들어주는건데
우리는 지금 바로 서블릿에서 세션을 쓸거니까 세션을 만들어주면됨
HttpSession session = request.getSession();

** 필터에서는 이게안되거든
 HttpServletRequest httpReq = (HttpServletRequest)request;
 이렇게 리퀘스트를 httpServletRequest로 캐스팅해줘

그리고 로그인이 성공한 타이밍에 session의 attr에 로그인 정보를 심어줘!
이거를 필터로 만들어서 할거야
로그인 체크하는 필터를 하나 만들고 거기서 session의 attr에 로그인정보 있는지 확인
있으면 로그인한 상태니까 원래대로 chain.doFilter~~ 하면되쥬

필터를 web.xml에 등록할건데
로그인검사는 로그인, 로그아웃일때는 안해야되잖아
그래서 그거를 regist, modify, remove일때만 하도록 한정적으로 pattern을 걸어줌
필터 매핑에서 url-pattern 에서 
뭐가됐든 마지막 url이 regist로 끝나면 이걸 할게요 - /*/regist
/~~/~~/regist , /~~/regist 이렇게 다되는거여

-------------> 엇 안된답ㄴㅣ다!!!
그래서 그냥 /member/*, /board/* 했고요
대신 list는 ㅇ로그인안해도 볼수있도록 init-param과 loginCheck부분에 list인지판단하는거 넣어서 제외할거라네용


야 인코딩할때
response.setContentType("text/html; charset=utf-8"); 
PrintWriter out = response.getWriter();
순서는 항상 content type 설정 하고나서 writer를 뽑아라1!!!!













