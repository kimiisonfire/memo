191129_jsp


~~~~(페이지에 써있는)39p 하는중
페이지디렉티브에서 우리가 뭘 넘겨줄건지,, 그런거
contentType, charset 잠깐 얘기했고요 이젠 서블릿 먼저 할거임


pdf 88p의 서블릿 들어가보갰음
아파치에서 만들었고요. html 컴포넌트만들다가 너무 힘들어서 만든거라네요..
mvc 패턴을 쉽게 적용할 수 있는 이점이 있다

화면을 제어하는 컨트롤러랑 화면이 붙어있으면 화면을 바꿀때 컨트롤러도 갈아야되잖아
둘을 분리시킨게 mvc 이고 이 컨트롤러를 나중에 서블릿으로 만들게 될거임


이제 서블릿을 함 만들어보겠아
extends 해서 쓸거임 httpServlet extends 할거고
override에서 httpServlet - doGet, doPost , GenericServlet - destroy, init
얘네를 만들거임. 이 클래스의 life cycle을 보고싶기때문에


http 는 기본적으로 요청이 와야 실행됨


destroy()  ::  메모리에서 인스턴스가 빠져나갈때 = 톰캣이 종료될떄
init()  ::  인스턴스를 처음 만들때. = 준비작업같은느낌
doget()  ::  요청이 올때마다 수행되는겨,  
dopost()  :: 요청이 올때마다 수행되는겨,  

처리에 대한 요청 = post  =>
그냥 요구할떄 = get  => 내정보보기

가입을 누르면 가입요청이가고 양식이 떠 = get
양식을 작성하고 제출하기 버튼을 눌러 = post

- get 방식
가입 -------- (요청) -------> 서버
   ↑_____________________________↓
                   가입양식
----->> 이것처럼 특별한거 하지않아도 되는거 = get
++ 요청사항을 주소줄에 담는겨. 근데 주소줄은 길이의 제한이 있어
	내가 받거나 보내는 길이가 한정적 = 파일 다운로드가 안되는거임

- post 방식
가입양식 작성 후
등록버튼 --------(보내)-----> 서버  ------> db에 등록
     ↑______(확인)_______________↓↑_____이것저것__↓
------>> 뭔가 제출했을때 저쪽에서 뭔가 처리해줘야함 = post
++ 길이에 제한이 없어. 파일다운로드해야하는경우!

get/post 개념을 확실히 알고가십쇼
~~처리를 보낸다. ~~한 데이터를 담아서 보낸다 = post


서블릿할때 클래스밖에 @WebServlet("/test")
     --> 이거써주면 url 에 ~~~/test 하면 이 클래스 실행되는겨

지금 우리가 TestServlet.java 만드렁가지구 그걸로 브라우저에 화면 만들어내는걸 했어
근데 진짜 out.println 이걸로 html 태그 다쓰고 난리났다
그래서 html부분만 할수있도록 만들어진게 jsp라는거임


사용자가 요청을 보내면 톰캣이 사용자가 요청했던 데이터 = HttpServletRequest,
우리가 나중에 만들어서 보낼 데이터 = HttpServletResponse 를 지가 객체를 만들어서
서블릿으로 보내주는거임


jsp =/= java
servlet = java
jsp는 표기하는 문법이지 자바문법이 아니여!


~~~~~~~~~~~~~~~~~~~~요기까지가 TestServlet.java , test.jsp


이번엔 src에 서블릿 파일을 만ㄷ르어볼게용
만들때 URL 매핑을 이름 바꿔주ㅕㅓ야됨
이렇게하면 우리가 아까 직접 쳐서 만들었던 webServlet도 이미있고
doget, dopost 있고그래 init이랑 destroy만 없어서글지


---- 잠깐 정ㅇ리! ----
서블릿으로 html 만들기 힘드니까 쉽게하려고 만든게 jsp야
jsp 실행하면 get, post로 나뉘고 처리하는게 들어가면 post야
request, response는 내가 안만들어 톰캣이 하는거지



>>>서블릿 실행하는 방법

두가지가있음
어노테이션 / web.xml 만드는거

서블릿클래스를 만들고 그걸 톰캣한테 알려줘야돼

1) 요청서 양식을 간단하게 만든게 WebServlet 어노테이션임 = 약식
대신 확인하려면 클래스를 다 열어봐야되니까 불편하긴하쥬
어노테이션을 지우면 클래스는 있지만 톰캣은 얘가 있는지도 모름

2) 프로젝트마다 web.xml을 달아주면됨
WebContent/WEB-INF 아래에 web.xml 을 만들어주고 서블릿을 등록하믄댐
이 web.xml에서 아래 두개를 등록혀
<web-app>
<servlet></servlet>
<servlet-mapping></servlet-mapping>
</web-app>
---> 서블릿과 서블릿매핑 얘네는 필요충분관계는 아니지만 
그래도 우리가 지금하려는거에는 두개가 다 필요해


<서버 재시작, 서버 restart, 서버재시작, 서버재구동, 서버restart>
서버 restart   =  ctrl + alt + R


~~~~~~ 하여튼 위에 다했고 pdf 108p~112p 까지도 했던거 걍 또보는거임


나중에는 자바코드는 다빼서 서블릿으로 옮기고
jsp에서는 화면구현하는 html단만 남길거임
그래서 자바코드를 태그식으로 억지로 만들어놓은 그런 표현식, jstl 이런게있고 쓰게됨
화면하나에 서블릿 하나가 달리지않겠어? 그럼 화면이 50개면 서블릿도 50개여야함?
너무 많고 관리하기 어려워지는거야
이걸 해결하려고 스프링을 쓰는거임

서블릿 구조를 자아아아알 이해해야 스프링이 쉬워짐
잘이해해라 꼼꼼히봐라


------------------서블릿 좀 봤으니까 다시 jsp 로 돌아가겠음  pdf 72p부터

dto = domain target object. vo는 dto보다 작은거임. 
	테이블의 도메인에 맞게 오브젝트를 만들었다.
	멤버테이블의 row 하나는 멤버vo 하나랑 매핑되는 그런겨,,
vo = 값을 가지고 다니는 클래스 variable object



자바에서 날짜를 다룰땐 util.date 쓰는게 좋아
sql.date는 시분초를 toString으로 지원하지않고
근데 util.date는 시간을 보여준다거나 자바스크립트와의 호환같은건 좋지만
날짜를 연산하기힘들어
날짜연산은 calendar로 해주면 됩니다..!

String도 그래 String 자체를가지고 뜯어내고 나누고할때는 그렇게 된 String을 반환하는거지
string 자체를 바꿔주거나 하진 못해
그걸하는건 StringBuffer란말여 !!










