191210_jsp


~ 210p~
필요한 자바코드를 jsp에 심어버리면 재활용할수가없지
코드의 중복을 방지하기위해서 jsp의 자바소스코드를 다 끄집어내는거임
그렇게되면 jsp는 화면만 맡게되는거고

컨트롤러를 서블릿으로 만들면 너무 복잡해져서 (서블릿이 몇개여)
나중에 그거를 spring mvc framework 로 하게될거임

dao는 하나의 쿼리에 하나의 메소드가 좋습니다
하나의 메서드에서 쿼리를 두개이상 써버리면 조합하기가 껄끄럽다네요
dao의 메서드들은 도구같은건데 이안에 중첩이있거나하면 dao를 처리의 단위(트랜잭션)으로 만들기가 어렵다고함
서비스에서는 dao를 조립해서써야하니까말여

db가 관계데이터베이스로 만들어져있다면
db의 자료를 자바에서 쓸수있는 텍스트형태의 객체로 만들어주는게 dao의 역할

service는 하나의 기능에 하나의 메소드가 좋다네요
그래서 service 내에서는 여러개의 dao를 호출할수있다고해


dao에 connection 전달하기~~
 - 각 메서드마다 connection 생성
	: 이게 제일안좋음 가장 결합도가 높달까. 근데 단위테스트할때는 이렇게하지
 - 생성자에서 connection 전달받기
 - 서비스가 만들어서 메서드의 매개변수로 connection 넘겨주기


~~~ 트랜젝션이야기 
db는 한테이블의 한행에 대한건 보장해주지만,
여러테이블에 동시에 넣을때 그 실행에 대한걸 보장해주진않아
이건 우리가 신경써야되는 부분인거야
이걸 되게하는게 트랜젝션인거임!!!
db에 대한부분이 끝까지 잘수행되는지 확인하는 단위적인(?) 기능이 트랜젝션임
트랜젝션 == 어떤일의 시작과 끝이 되는 단위. 기능의 단위 


~~~ 217p
dao, service 내부에서 try-catch 하지마로라


이제 오라클로가서 디비쓰는거 할거임
일단 오라클 버전이 넘 낮아서 좀더 높은거 받는다네용
받는동안 딴소리좀해볼게용

~~~ 190p
db로 많은 사용자들이 요청을 와르르보내면 부하가 걸릴텐데
그걸 어떻게 해결할거냐?
중프나 그이전에 만들었던 jdbc 스타일의 프로그래밍은 세명만 접속해도 터진다
그래도 전반적인 골자는 비슷하쥬

ibatis든 뭐든 내부는 다들 jdbc 프로그래밍으로 되어있음 이게 기본이라는거임
ibatis는 dao라는 클래스가 있어야만 쓸수있고(없어도 쓸수는 있느데 비효율적)
jsp로만 만들어진애들은 ibatis를 쓰기 너무어렵고 jdbc로 써야함


할튼 우리가 원래 jdbc할때 생성자에서 connection만들었는데
이젠는 connection 객체를 생성하는게 달라지는거임..!


우리가 주로하는 db쪽에서의 트랜젝션 개념은 203p와 같습니다
특징 = 다끝나고 커밋!!


~~~ 205p
풀 = 미리만들어가지고 해놓은거임..(?) 
커넥션풀 = 커넥션을 미리 만들어가지고 넣어놓은거!
dbcp = 데이터 베이스 커넥션 풀!
우리는 dbcp2를 쓸거라고하네요

하여튼 커넥션을 미리 만들어서 풀에 저장해두고있다가 스고싶을떄 쓰는 그런거말입니다
필요한 라이브러리는 dbcp, pool 두개 있습니듀


<dbcp 설치, pool 설치, dbcp설치>

https://commons.apache.org/proper/commons-dbcp/index.html
여기가보면 해당 자바에 맞는 dbcp 버전을 권고해주고있읍니다
DBCP 2.4.0 compiles and runs under Java 7 only (JDBC 4.1)
우리는 이거받아야됨

브라우저에 dbcp2.4.0 jar 검색해서 maven으로 가세요
https://mvnrepository.com/artifact/org.apache.commons/commons-dbcp2/2.4.0
여기거든요 여기서 files에 있는 jar 를 받으십쇼

이제 dynamic web project는 라이브러리를 직접 줘야하거든
webcontent 안에 web-inf 안에 lib 여기에 jar를 복붙하셔 그럼끝남

만약에 이 jar의 패키지구조를 보고싶으면 오른쪽키 - build path - add build
하면 위의 Java Resources - src - libraries 에 추가가됩니듀

---------------------여기까지 dbcp 다운로드

pool 다운로드
pool2.4.0 jar 검색해서 maven으로 가
여기서는 상단의 Home » org.apache.commons » commons-pool2  
여기에서 저 commons 클릭하고 2.4로가서 jar 다운로드받아라
걔를 아까처럼 web-inf / lib 안에 복붙혀

---------------------- 여기까지 pool 다운로드

이제 얘네가 내부적으로 로그를 내보내는데 그때 사용되는 패키지가있음
== common io
걔를 같이넣어줘야해
브라우저에 common-io maven 검색 제일먼저뜨는사이트로 들어가시고
2.4 선택하고 jar 다운로드받고 갸를 lib에 추가해 아까처럼

이렇게 세놈이 세트랍니다.. dbcp , pool, common-io

-================================================다운은 끝!


아까 가져온 19.~~ 오라클을 실행합니듀 (no-jre 버전)

거기서 이제 다른사용자 생성을 마우스로 클릭클릭할수있거든요
부여된권한 connection, resource 권한이부여됨, 기본값 주고요
시스템권한에서 create view에 권한과 관리자옵션줍니다
사용자에 이름/비번./확인 전부 java

그리고 java로 접속!

테이블만들건데 마우스로만 깔짝댈거임 -> 만들었음 member 테이블


데이터소스가 뭐냐?
db에 연결하는데 필요한.. 예.. 그런거요...
우리가 만들었던 sqlconfig 있잖아
거기서 우리가 사실 ibatis에 탑재되어있는 dbcp1, pool을 세팅했었던거임
type="jdbc", dataSource type="pooled", property name="url" value="${url}" 이런거!
우리가 이걸로 데이터 소스를 잡았던거임~!

근데 우리는 이번에 데이터소스를 서블릿으로 잡아보는걸 한번 해볼거임
(spring 가면 데이터소스잡는거가 없어지고 다 외부에서 지정한대ㅒ)

InitDataSourceServlet.java 만들었읍니듀 
우리가 만든 dataSource를 web.xml에서 가져와서 세팅한대
왜 web.xml에서 가져옴? == 클래스안에 적어버리면 배포했을때 .class 뿐이라변경불가
그래서 외부파일로 변경할수있으려면 web.xml에서 인자를 읽어서 세팅하게하려고함

--> 어떻게 읽어오나요?		**** 이거 중요해 ****

일단 web-inf에 web.xml 만들어!
거기에 서블릿을 등록해!! <servlet></servlet> 해서 이름, 클래스 등록
거기에 init-param 으로 파라미터를 등록해!!! <init-param> 하나가 파라미터 하나야
파라미터는 항상 key, value니까 name, value를 설정해주면되고
데이터소스는 4개짜리 세트니까 4번해주면되는거여
그러면 톰캣이 그걸 읽어서 init~Servlet의 config에 다 넣어줘...!!!!

>>>>> 이 형식을 잘 이해하렴 중요하단다

할튼 web.xml로 넘어온 파라미터를 String으로 저장함

우리가 데이터소스를 초기화해야하는데 언제? 톰캣이 돌아갈떄!
web.xml에서 이 서블릿을 일단 한번 돌리라고 밑에 적어놨거든 load-on-startup
그래서 서블릿의 init() 메서드를 쓰는거임 거기에서 datasource를 set! 하는거야!!!!!!!!!







