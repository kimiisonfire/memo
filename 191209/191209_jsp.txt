191209_jsp


주소줄을 요청하고 상황에 따라서 jsp를 다른걸 보낼수가있다..!

get/post는 지금단계에서 구분할필요는 없다고하네요
당장은 입력한게 주소줄에 담겨가는지, request의 body 부분에 담겨가는지의 차이
input type=pass여도 암호화되는것은 아니다 라는것도 알고계셔라


비교문을 쓸때는 null을 비교할수있는게 있으면 꼭 null비교 먼저하셔라

포워드할 페이지 정보를 resultPage에 담으면 다음과 같습니듀
<jsp:forward page="<%=resultPage %>" />
--- jsp:forward의 page 안에 들어가는건 결국 URI임


정보를 다음 페이지(?)에 넘길때 파라미터 또는 request에 담아서 넘길수있음
포워드에서는 파라미터, 리퀘스트에 담아서 넘기는데
리다이렉트는 파라미터에는 담을수있지만 리퀘스트가 매번 갱신되기때문에
리퀘스트에 담앗 ㅓ넘기거나 할수없음~~~~




~~~~~~ 원래 jdbc 해야하는데 우선 mvc 부터 한다네요
~~ 222p

사용자가 주소줄로 url로 요청을하는데 이제는 .jsp가 안붙는다..!
이제는 url:/login 이렇게 요청하게됨
>> .jsp가 안붙으면 톰캣은 무조건!! 무조건!!! 서블릿 찾으러감!!! <<

무튼 해당 url에 맞는 서블릿이 실행되는데
서블릿마다 너는 이 url이 오면 실행해 이렇게 사상을 시켜놓아야해
= @WebServlet("/login")

doGet() , doPost() 둘중에 하나가 실행될거고, 
얘가 어떤화면을 보여줄건지에 해당하는 jsp를 실행할거임
이때의 서블릿 = controller, 화면을 보여줄 jsp = view
화면을 채울수있는 인자들은 서블릿이 처리할거임
jsp가 화면을 만들어서 클라이언트한테 보낼건데, 
그게 html, json, file, xml, image등의 결과로 나갈거임

이때 서블릿의 request는 jsp의 request로 전달됨!
서블릿->jsp, 서블릿->jsp 계속 이렇게할겁니다

이제는 진짜 흐름에대한 예제가 될것임... 빠지지마로라...


웹콘텐트에 만드면 클라이언트가 아무데서나 접근할수있으니까
이제는 web-inf 안에 만들것임

java Resources/src에다가 서블릿도 만들거임
로그인기능으로 만들거라서 어노테이션을 login으로줬고
jsp 경로를 찾아갈거니까 url을 설정할건데
이거는 웹브라우저가 찾는거아니고 톰캣이 돌리는곳이잖아
그래서 / 이렇게 시작하면 컨텍스트 경로구나 하고 붙여줘
그래서 우리는 webcontent 다음 경로부터 써주면됨


request.getRequestDispatcher(url).forward(request, response);
== url로 포워드하면서 서블릿이 받았던 request, response를 넘겨줄거다~~ 하는거


로그인 성공하면 이동하는 main 화면은 리다이렉트? 포워드?
== 답은 리다이렉트!
로그인 성공했을때 로그인한 아이디, 패스워드 정보를 그대로 가지고 가는건 위험
그리고 로그인해서 뜬 화면에서 새로고침 눌렀을때 다시 로그인화면이 나오면 안돼
그래서 포워드는 안된다!! 리다이렉트다!
=====> path 줄때 웹이 해석할수있도록 getcontextpath 해야함
String url = request.getContextPath() + "/main";

로그인 실패시 리다이렉트? 포워드?
== 일단은 포워드!
실패시 아이디입력했던건 그대로두고 하고싶으니까포워드할게
이럴떈 url을 톰캣이 해석할수있게 잡아줘야함
url = "/WEB-INF/views/loginForm.jsp";

=------------------->>>> 이거 헷갈리지않도록 리다이렉트일때는 앞에
"redirect:" 라는 스트링을 붙여줄거임!


매번 비슷한문장을 쓰고있단말이지
이거쓰기 너무 귀찮고 비효율적이니까 얘만 묶어서 클래스로 만들었음 
= viewResolver
여기서는 에러를 전부 throws 할거임
왜냐면 여기서 try-catch하면 내부에서 일어난 오류를 내부에서 해결해버렸으니까
어디서 에러난건지 알수가없음..
그래서 throws를 해서 위로 올려올려 해줘야 화면에서도 오류를 출력할수있고
어디서 에러가났는지도 볼수가있겠지
실패한것도 하나의 반환값임




내일부터는 데이터베이스한답니다






>>>>>>>>복습복습

directive include & jsp include
forward & redirect
서블릿의 doget & dopost , forward & redirect
