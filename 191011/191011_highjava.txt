191011_highjava

오늘은 yield() 함해볼께
yield 메서드를 실행하면 자기 순번을 자기 뒤에 쓰레드에 넘겨주고,
본인은 다시 대기열의 제일 끝으로 들어가서 대기타는거임

쓰레드 종료시킬때는 stop() suspend() resume()
얘네를 사용하면 교착상태에 빠질 가능성이 높다 특히 stop()
stop을 만나면 어떤 상태이든 쓰레드가 완전히 중지됨
근데 쓰레드가 작업중이면 쓰레드안에서 여러 자원들을 쓸거아녀
썼던 자원은 운영체제한테 "자원반납" 해야되는데 stop() 쓰면 그냥 느닷없이 멈추니까
정리작업을 할수가없어,,
그래서 자원을 다른데에서 쓰고싶어도 못쓸수도 있고 하여튼 그렇대
얘네를 사용하지 않고 쓰레드를 정상적으로 종료할수있게 프로그램을 짜야합니듀,,


비추천하는 메서드를 사용하거나 앞으로 사라질 메서드를 사용하면
명령어 위에 까만줄이 생김..

그래서 stop을 안쓰고 멈추는 방법들을 찾아볼거임..!


하나의 데이터를 두개의 쓰레드에서 사용하려면
데이터를 객체로 만들고 그거의 참조값을 갖다 써야겠져
글고 둘다 동시에 쓰면 개같아질수있으니까
하나가 쓰는동안에는 락을 걸어놔서 다른 쓰레드가 접근 못하게하는 그런걸 해줘야댐
그러면 나름 동기화가 되는거갯죠


그리고 진짜 동기화가있음..! 락을 거는게 있음  -> synchronized

메서드 선언부에 synchronized  해주거나, 동기화블럭 해주면 됩니더...!
그러면 쓰레드끼리 왔다갔다해도 공유하는 값이 동기화가 됨

동기화 영역에서 호출하는 메서드가있으면 그 메서드도 찾아가서 동기화처리해줘야댐
호출하는 메서드가 복잡한?? 내용을 가지고 있거나 반복문이 있거나 하면
동기화가 풀려버릴수가 있거든
