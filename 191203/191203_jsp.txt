191203_jsp


request 객체가 갖는 메서드 ~~~76p 하는중
getContextPath() :: 정말이지 유용한 코드란다..!


request 객체의 파라미터 읽는 메서드 ~~~ 80p
getParameterMap()  -> 넘어온 파라미터 맵을 그대로 map 변수에 담아주는거임

근데 얘가 map은 map인데, getParameterValues(name) 이런게있어. 
이름이 name인 모든 파라미터의 값을 배열로 준대..!
원래 map은 중복이 불가한 콜렉션인데 왜..?!
이 map의 value에 들어간 값이 여러개라는 뜻임... 오호
파라미터의 value값이 String의 배열로 되어있다ㅡㄴ거임..!
checkbox 생각해보세요...!! 
--------> 그래서 이 배열을 통째로 꺼내는 방법은 getParameterValues()  -> String[] 반환
====>>> checkBox 파라미터를 넘겻을땐 무조건 getParameterValues()를 써야돼!!!!!!
====>>> radio는 무조건 getParameter() 로 받아야되는거임 무조건 하나니까..!

파라미터 맵의 value는 기본적으로 무조건 String[] 형식임!   다만
getParameter는 무조건 0번쨰 인덱스에 있는걸 꺼내주는거
getParameterValues는 배열을 들어내서 전부 나한테 주는거고



form 태그의 method는 기본값이 get

label 의 for 속성에 있는 이름과 input의 id가 같으면 둘이 연결됨!

input checkbox, radio 얘네의 name을 같게 주면 얘네가 그룹으로 묶어짐

input 태그의 type=submit은 거의~~~~ 쓰지않음
이거는 엔터지면 무조건 넘어가는거거든. textarea 쓰고있었는데 엔터치면 넘어간다는거야
검색하는 기능을 제외하고는 절대절대 안씁니다..


자바스크립트의 for in == 향상된 for문=집합체for문  for ( str in checkboxValue )
for of  이런것도 있고...
자바스크립트의 집합체는 object ( {이걸로묶인거} ), 배열  이게 전부임


250byte 넘어가면 무조건 post입니다ㅏㅏㅏㅏㅏ



~~~ 80p의 인코딩/디코딩은 나중에 쿠키할때 배울게용


어제했던 null검사 잠깐 얘기할게용
우선 &&, || 잠깐 얘기합시다
자바에서는 && 을 할때 둘다 참일때 참이다 이런식으로 안해
자바이놈자체는 일단 앞이 참인지 보는데 앞이 거짓이면 뒤의 피연산자 확인도안해
근데 앞에 참이면 뒤의 피연산자를 확인하는데 걔에 의해서 얘가 참인지아닌지 결정되는겨

member != null && member.getId().equals(id)   => 여기서 왜 null검사를 먼저하는가!
만약에 member가 null이라고해봐
앞에 검사했어 = false , 
원칙적으로는 뒤에 검사하러가서 nullpointerExcpt 에러나야돼
근데 자바는 앞에가 거짓이면 뒤에거 실행도안해! 안하고 넘어가는거야
그래서 nullpointExcept 안뜨는거임...!
앞이 true일때만 뒤에를 검사하는거야... 미친..

|| 도 그래
우리는 둘중에 하나만 참이어도 참이다~ 하잖아
근데 자바는 그렇게 생각안한다고
앞에있는게 참이면 뒤에를 안봐 앞이 참이면 무조건 참이니까 뒤를 검사안하고 참이라고
대신 앞이 거짓이면 뒤에걸로 결과가 결정되니까 뒤에걸 무조건보고 걔를 따라간다고

그래서 무조건 null검사가 &&, || 상관없이 앞으로 나가야돼!


~~~ 헤더관련 메서드들은 별로,, 쓸일이 없읍니다..


~~~ 84p 리다이렉트
서버에 한번 요청이왔는데 서버가 재요청 시키는거임!
리다이렉트하는 이유 : 
웹브라우저가 요청을했는데 요청이랑 맞지않아 그래서 서버가 주소줄을 줘 그쪽으로 가라고
그러면 웹브라우저가 다시 그 주소줄을 브라우저에 쳐서 글루가서 올바르게 요청혀

회원가입을 했으면 메인페이지로가세요!라고 서버에서 말하지않겠어? 
웹브라우저가 회원가입 요청하면 서버가 이제 메인페이지로가라고 주소를줘
그럼 그주소로 웹브라우저가 이동을해
그 이동한 주소는 브라우저가 요청했던적이 없는 주소인거여

>>>>>>> 리다이렉트 특징!!! <<<<<<<<<
- 주체 = 서버!!
- 현상 = 주소줄이 바뀐다!!!
- 요청하는 모든 리퀘스트 데이터가 없어져..! 
	로그인하면 메인화면으로 넘어갈때 보냈던 파라미터는 폐기되고 넘어가는겨
	이때는 무조건 get방식임
	사용자가 보냈던 데이터를 없애기위해서라도 리다이렉트가 꼭 필요혀

리다이렉트와 반대되는 개념 == 포워드
뭔가를 요청한 상태에서 요청하지 않았던 화면을 끄내서 보여주는거임
- 주체 = 역시 서버
- 현상 = 주소줄은 바뀌지않고 그거에 해당하는 화면을 꺼내서 보여주는거
- 리퀘스트를 갱신하는게 아니여! 


>>> 포워드/리다이렉트에서 리퀘스트의 정보가 갱신되냐, 유지되냐 그게 중요한거임


++ 가입이라는 기능에 대해서 리다이렉트/포워드/getParameter 뭘써야하는지 알려준대

  - 플로우 ☆★☆★☆★☆★☆★☆★☆★☆★☆★ 이거 그릴줄알아야됨

1) 회원가입 버튼 클릭 ---------(request: get)------> 서버가 가입양식을 넘겨줘
				        (요타이밍에 HttpServletRequest, response
		    포워드    ←	 ↙	만들어짐!) -- 데이터 없음
			            ↙	~~~서블릿 doGet() 메서드~~~

2) 회원가입 양식을 작성해서 날려 -----(request: post)-----> 서버가 가입처리함
				              (요타이밍에 HttpServletRequest, 
		리다이렉트   ←  	↙	response 만들어짐!)  -- 데이터 있음
			           ↙		~~~서블릿 doPost() 메서드~~~
3) 가입이후의 화면이 뜹니듀

=============> get일때는 서블릿에서 포워드, post일때는 리다이렉트 하게돼있음
======>> 위의 플로우에서 왼쪽은 JSP로 작성 == HTML, 오른쪽은 Servlet
			view 라고하고요		controller라고합니다

>> 어디가 get/ post, 어디가 jsp/ servlet, 어디가 포워드/ 리다이렉트  이거 구분해야돼!!!!!








