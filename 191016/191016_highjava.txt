191016_highjava

FileInputStream 은 1바이트씩 읽는건데,
파일의 크기가 크다면 시간이 오래걸리니까
BufferedInputStream 사용해주면 오천오백배 빠르게된다!

e.printStackTrace();  --> 이거 써주면 어디서 에러났는지 띄워준다네용


기본형/문자열 읽을수있는 input 그런게 있다
DataInputStream() 으로 입출력하면
readChar() readUTF() 뭐 이런식,,


~~~ 직렬화 ~~~
데이터들은 실제 메모리상에 있을때는 어떤 주소자리에 데이터가 들어있겠져
이걸 파일에 저장한다! 하면 일렬로 쭉 나열해서 저장할필요가있음
그니까 원래 주소별로 병렬형식으로 들어있던 데이터들을 순서대로 재배치하는걸 직렬화!!

거꾸로 직렬화된 데이터를 객체에 넣어줘야할때는 역직렬화!!

우리는 직렬화시켜라! 하는 명령어만 넣어주면 시스템이 알아서한느겁니다..,

>>>> 객체를 저장한다 = 객체의 모든 인스턴스변수의 값을 저장한다!!!! <<<<

java.io.Serializable  을 구현해줘야 ObjectInput/OutputStream을 쓸수가있음
= 저걸 구현해야 직렬화를 할수있음

( 제외되는 경우)
1. 변수앞에 transient 를 붙여주면 얘는 직렬화대상에서 제외 = 저장이 안된다는거지!
변수가 들어있는 공간자체가 없어지는건 아니고, 그냥 데이터가 기본값으로 저장되는거임
2. 참조변수에 저장된 객체가 시리얼라이즈 구현하지 않았던 객체(원래 클래스에 구현을 안한거니까)인 경우에도 제외!
3. 상속받은 객체인데 조상 객체가 시리얼라이즈 구현 안됐으면 제외!!

readObject(), writeObject() 를 오버라이딩하면 직렬화 맘대로할수있대 그게 뭔말?













